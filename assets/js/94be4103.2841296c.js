"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[2263],{5110:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(9703);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return r?n.createElement(h,o(o({ref:t},u),{},{components:r})):n.createElement(h,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9198:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7086),a=(r(9703),r(5110));const i={sidebar_position:5},o="Using the Mephisto Review CLI",l={unversionedId:"guides/tutorials/review-cli",id:"guides/tutorials/review-cli",isDocsHomePage:!1,title:"Using the Mephisto Review CLI",description:"Once you've installed Mephisto, you have access to the mephisto command line utility.",source:"@site/docs/guides/tutorials/review-cli.md",sourceDirName:"guides/tutorials",slug:"/guides/tutorials/review-cli",permalink:"/docs/guides/tutorials/review-cli",editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/tutorials/review-cli.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"guides",previous:{title:"Developing a workflow",permalink:"/docs/guides/tutorials/workflows"},next:{title:"Developing and debugging frontends",permalink:"/docs/guides/how_to_use/task_creation/developing_frontends"}},s=[{value:"Overview",id:"overview",children:[],level:2},{value:"1. Use the starter template",id:"1-use-the-starter-template",children:[],level:2},{value:"2. Create a custom renderer",id:"2-create-a-custom-renderer",children:[],level:2},{value:"3. Create custom thumbnails",id:"3-create-custom-thumbnails",children:[],level:2}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-the-mephisto-review-cli"},"Using the Mephisto Review CLI"),(0,a.kt)("p",null,"Once you've ",(0,a.kt)("a",{parentName:"p",href:"../../quickstart"},"installed Mephisto"),", you have access to the ",(0,a.kt)("inlineCode",{parentName:"p"},"mephisto")," command line utility."),(0,a.kt)("p",null,"This utility can be used to invoke a review workflow via ",(0,a.kt)("inlineCode",{parentName:"p"},"$ mephisto review ..."),"."),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"To review data, you must specify:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The actual data to review"),(0,a.kt)("li",{parentName:"ol"},"The visual interface to represent the data"),(0,a.kt)("li",{parentName:"ol"},"If approving/rejecting (as opposed to  exploring), what to do with the results")),(0,a.kt)("p",null,"Here's a sample command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cat input.jsonl | mephisto review --json my-review-interface --stdout\n")),(0,a.kt)("p",null,"Here we:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Pipe in the contents of ",(0,a.kt)("inlineCode",{parentName:"p"},"input.jsonl")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"mephisto review")," command. This is our review data as newline separated JSON objects. (",(0,a.kt)("em",{parentName:"p"},"We also specify the ",(0,a.kt)("inlineCode",{parentName:"em"},"--json")," flag to indicate that this is JSON input as opposed to the default CSV."),")")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Point to the build location of our review interface. This is a single-page app that implements the ",(0,a.kt)("inlineCode",{parentName:"p"},"useMephistoReview()")," hook to consume data. (",(0,a.kt)("em",{parentName:"p"},"To start with a starter template, you can you ",(0,a.kt)("inlineCode",{parentName:"em"},"cra-template-mephisto-review"),". We will elaborate on this below."),")")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Specify the output of our approve/reject data. For now we will just print it out to standard output with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--stdout")," flag."))),(0,a.kt)("h2",{id:"1-use-the-starter-template"},"1. Use the starter template"),(0,a.kt)("p",null,"The quickest way to create your own review interface is to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"cra-template-mephisto-review")," template with ",(0,a.kt)("inlineCode",{parentName:"p"},"create-react-app"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npx create-react-app --template mephisto-review my-review-interface\n")),(0,a.kt)("p",null,"Once setup, you can build, and test the template:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd my-review-interface\n$ yarn build\n$ cat sample-data.jsonl | mephisto review --json --stdout build/\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note: The template ships with some sample data files: ",(0,a.kt)("inlineCode",{parentName:"em"},"sample-data.jsonl")," and ",(0,a.kt)("inlineCode",{parentName:"em"},"sample-data.csv"))),(0,a.kt)("h2",{id:"2-create-a-custom-renderer"},"2. Create a custom renderer"),(0,a.kt)("p",null,"TODO"),(0,a.kt)("h2",{id:"3-create-custom-thumbnails"},"3. Create custom thumbnails"),(0,a.kt)("p",null,"TODO"))}u.isMDXComponent=!0}}]);