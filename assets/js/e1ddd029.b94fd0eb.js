"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[5603],{5110:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(9703);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9552:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(7086),r=(n(9703),n(5110));const a={sidebar_position:3},i="Backend: dev setup",l={unversionedId:"guides/how_to_contribute/backend_development",id:"guides/how_to_contribute/backend_development",isDocsHomePage:!1,title:"Backend: dev setup",description:"We use pre-commit to enforce code styles on the code base (using black for Python and prettier for Javascript).",source:"@site/docs/guides/how_to_contribute/backend_development.md",sourceDirName:"guides/how_to_contribute",slug:"/guides/how_to_contribute/backend_development",permalink:"/docs/guides/how_to_contribute/backend_development",editUrl:"https://github.com/facebookresearch/Mephisto/tree/main/docs/web/docs/guides/how_to_contribute/backend_development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guides",previous:{title:"Frontend: dev setup",permalink:"/docs/guides/how_to_contribute/frontend_development"},next:{title:"Upgrade Guide",permalink:"/docs/guides/upgrade_to_1/guide"}},p=[{value:"Local development mode",id:"local-development-mode",children:[],level:2}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backend-dev-setup"},"Backend: dev setup"),(0,r.kt)("p",null,"We use ",(0,r.kt)("a",{parentName:"p",href:"https://pre-commit.com/"},"pre-commit")," to enforce code styles on the code base (using ",(0,r.kt)("inlineCode",{parentName:"p"},"black")," for Python and ",(0,r.kt)("inlineCode",{parentName:"p"},"prettier")," for Javascript)."),(0,r.kt)("p",null,"To setup your local codebase to auto-lint and avoid lint test failures for your PRs, please set up pre-commit for your local repo as such:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"pip install pre-commit")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"pre-commit install")," to install git hooks"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"pre-commit run --all-files")," (optional - run ad-hoc against all files)")),(0,r.kt)("h2",{id:"local-development-mode"},"Local development mode"),(0,r.kt)("p",null,"If you've installed Mephisto via ",(0,r.kt)("inlineCode",{parentName:"p"},"pip install mephisto")," in the past, in order to get python to use your local version of the package, navigate to your ",(0,r.kt)("inlineCode",{parentName:"p"},"Mephisto")," folder and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -e .\n")),(0,r.kt)("p",null,"This will ensure that your local changes are used in the running version of Mephisto"))}s.isMDXComponent=!0}}]);